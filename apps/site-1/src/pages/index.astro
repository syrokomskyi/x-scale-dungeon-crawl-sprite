---
import Footer from "../components/Footer.astro";
import FullscreenCard from "../components/FullscreenCard.astro";
import Header from "../components/Header.astro";
import VirtualGallery from "../components/VirtualGallery.tsx";
import Layout from "../layouts/Layout.astro";

const baseUrl = import.meta.env.BASE_URL;

const images = await import("../../public/data/images.json");
const imageList = images.default.sort(() => Math.random() - 0.5);
---

<Layout title="Tool for Creating Fan Gallery for any Roguelike Game">
  <Header />

  <main class="container mx-auto px-4 py-8">
    <VirtualGallery
      images={imageList}
      baseUrl={baseUrl}
      client:load
    />
  </main>

  <Footer />

  <FullscreenCard />
</Layout>

<script is:inline define:vars={{ baseUrl, imageList }}>
  function encodePath(path) {
    let hash = encodeURIComponent(path.replace(".webp", ""));
    hash = hash.replace(/%2F/g, "+");
    return hash;
  }

  function decodePath(hash) {
    return hash
      ? decodeURIComponent(hash.replace(/\+/g, "%2F")) + ".webp"
      : null;
  }

  let isProgrammaticHashChange = false;

  function setHash(path) {
    isProgrammaticHashChange = true;
    history.replaceState(null, null, "#" + encodePath(path));
  }

  window.closeFullscreenCard = function () {
    const overlay = document.getElementById("fullscreen-overlay");
    overlay.classList.remove("flex");
    overlay.classList.add("hidden");
    const video = document.getElementById("fullscreen-video");
    if (video) {
      video.pause();
      video.currentTime = 0;
      video.src = "";
    }
    setHash("");
  };

  function openFullscreenCard(path, name, note, icon, video) {
    document.dispatchEvent(
      new CustomEvent("openFullscreen", {
        detail: { path, name, note, icon, video },
      })
    );
  }

  function openCardByPath(path) {
    const image = imageList.find((img) => img.path === path);
    if (image) {
      openFullscreenCard(
        image.path,
        image.name,
        image.note,
        image.icon,
        image.video
      );
    }
  }

  function getPathFromHash() {
    const hash = window.location.hash.slice(1);
    return decodePath(hash);
  }

  window.addEventListener("hashchange", () => {
    if (isProgrammaticHashChange) {
      isProgrammaticHashChange = false;
      return;
    }

    const path = getPathFromHash();
    if (path) {
      openCardByPath(path);
    } else {
      window.closeFullscreenCard();
    }
  });

  document.addEventListener("DOMContentLoaded", () => {
    // Add overlay click listener
    const overlay = document.getElementById("fullscreen-overlay");
    if (overlay) {
      overlay.addEventListener("click", window.closeFullscreenCard);
    }

    // Check initial hash
    if (window.location.hash) {
      const path = getPathFromHash();
      if (path) {
        openCardByPath(path);
      }
    }
  });

  // Check initial hash after setup
  const initialPath = getPathFromHash();
  if (initialPath) {
    openCardByPath(initialPath);
  }
</script>
